texture2D Diffuse;
texture2D Mask;

sampler LinearSampler;

uniform uint LIGHT_COUNT;
uniform uint DIR_LIGHT_COUNT;
uniform float DENSITY;

struct InstanceData
{
    float Height;
    float3 Oobb;
};

constantBuffer<InstanceData> instanceCb;

struct InstancesInfo
{
    uint index;
};

struct Light
{
    float3 Color;
}
constantBuffer cbLightBuffer
{
    Light l[12];
};


constantBuffer<InstancesInfo> information[12];
constantBuffer<InstancesInfo> informationUnbound[];

constantBuffer<float4> objectTranslation;

constantBuffer cbRenderObjectBuffer
{
    float4x4 ToWorld;
    float4x4 ToModel;
};

constantBuffer<float4x4> myCb[18];

vertexLayout vIn
{
    float3 position : POSITION;
    float3 normal : NORMAL;
    float2 uv : TEXCOORD0;
};

shader: VS vs, PS ps;